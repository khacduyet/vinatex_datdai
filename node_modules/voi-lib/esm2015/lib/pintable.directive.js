import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';
export class PintableDirective {
    constructor(elementRef, renderer) {
        this.elementRef = elementRef;
        this.renderer = renderer;
        this.pinnedCols = 0;
    }
    ngAfterViewInit() {
        this.active();
    }
    active() {
        this.renderer.listen(this.elementRef.nativeElement.querySelector('tbody'), 'scroll', this.onScroll.bind(this));
    }
    onScroll(event) {
        let header = this.elementRef.nativeElement.querySelector('thead');
        let body = this.elementRef.nativeElement.querySelector('tbody');
        header.style.transform = `translateX(-${event.srcElement.scrollLeft}px)`;
        if (this.pinnedCols > 0) {
            header.childNodes.forEach(tr => {
                var _a, _b;
                let n = this.pinnedCols;
                for (let i = 0; i < n; i++) {
                    if (((_a = tr.childNodes[i]) === null || _a === void 0 ? void 0 : _a.style) !== null && ((_b = tr.childNodes[i]) === null || _b === void 0 ? void 0 : _b.style) !== undefined) {
                        tr.childNodes[i].style.position = `relative`;
                        tr.childNodes[i].style.transform = `translate(${event.srcElement.scrollLeft}px)`;
                    }
                }
            });
            body.childNodes.forEach(tr => {
                var _a, _b;
                for (let i = 0; i < this.pinnedCols; i++) {
                    if (((_a = tr.childNodes[i]) === null || _a === void 0 ? void 0 : _a.style) !== null && ((_b = tr.childNodes[i]) === null || _b === void 0 ? void 0 : _b.style) !== undefined) {
                        tr.childNodes[i].style.position = `relative`;
                        tr.childNodes[i].style.transform = `translate(${event.srcElement.scrollLeft}px)`;
                    }
                }
            });
        }
    }
}
PintableDirective.decorators = [
    { type: Directive, args: [{
                selector: '[voiPintable]'
            },] }
];
PintableDirective.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 }
];
PintableDirective.propDecorators = {
    pinnedCols: [{ type: Input, args: ['pinnedCols',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGludGFibGUuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9naG9zdC52bi9Eb2N1bWVudHMvbGlicy90ZXN0bGliL3Byb2plY3RzL3ZvaS1saWIvc3JjLyIsInNvdXJjZXMiOlsibGliL3BpbnRhYmxlLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQWlCLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUt2RixNQUFNLE9BQU8saUJBQWlCO0lBRTVCLFlBQW9CLFVBQXFCLEVBQVMsUUFBa0I7UUFBaEQsZUFBVSxHQUFWLFVBQVUsQ0FBVztRQUFTLGFBQVEsR0FBUixRQUFRLENBQVU7UUFEL0MsZUFBVSxHQUFVLENBQUMsQ0FBQztJQUM2QixDQUFDO0lBRXpFLGVBQWU7UUFDYixJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDaEIsQ0FBQztJQUNNLE1BQU07UUFDWCxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLEVBQUMsUUFBUSxFQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUE7SUFDOUcsQ0FBQztJQUNELFFBQVEsQ0FBQyxLQUFLO1FBQ1osSUFBSSxNQUFNLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ2xFLElBQUksSUFBSSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNoRSxNQUFNLENBQUMsS0FBSyxDQUFDLFNBQVMsR0FBRyxlQUFlLEtBQUssQ0FBQyxVQUFVLENBQUMsVUFBVSxLQUFLLENBQUM7UUFDekUsSUFBRyxJQUFJLENBQUMsVUFBVSxHQUFDLENBQUMsRUFBQztZQUNuQixNQUFNLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsRUFBRTs7Z0JBQzdCLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUM7Z0JBQ3hCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7b0JBQ3hCLElBQUcsT0FBQSxFQUFFLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQywwQ0FBRSxLQUFLLE1BQUssSUFBSSxJQUFJLE9BQUEsRUFBRSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsMENBQUUsS0FBSyxNQUFJLFNBQVMsRUFBQzt3QkFDMUUsRUFBRSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsUUFBUSxHQUFHLFVBQVUsQ0FBQzt3QkFDN0MsRUFBRSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsU0FBUyxHQUFHLGFBQWEsS0FBSyxDQUFDLFVBQVUsQ0FBQyxVQUFVLEtBQUssQ0FBQztxQkFDbEY7aUJBQ0o7WUFDSCxDQUFDLENBQUMsQ0FBQztZQUNILElBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxFQUFFOztnQkFDM0IsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQyxFQUFFLEVBQUU7b0JBQ3hDLElBQUcsT0FBQSxFQUFFLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQywwQ0FBRSxLQUFLLE1BQUssSUFBSSxJQUFJLE9BQUEsRUFBRSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsMENBQUUsS0FBSyxNQUFJLFNBQVMsRUFBQzt3QkFDMUUsRUFBRSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsUUFBUSxHQUFHLFVBQVUsQ0FBQzt3QkFDN0MsRUFBRSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsU0FBUyxHQUFHLGFBQWEsS0FBSyxDQUFDLFVBQVUsQ0FBQyxVQUFVLEtBQUssQ0FBQztxQkFDbEY7aUJBQ0Y7WUFDSCxDQUFDLENBQUMsQ0FBQztTQUNKO0lBQ0gsQ0FBQzs7O1lBcENGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsZUFBZTthQUMxQjs7O1lBSmtDLFVBQVU7WUFBUyxTQUFTOzs7eUJBTTVELEtBQUssU0FBQyxZQUFZIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBJbnB1dCwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1t2b2lQaW50YWJsZV0nXG59KVxuZXhwb3J0IGNsYXNzIFBpbnRhYmxlRGlyZWN0aXZlIGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCB7XG4gIEBJbnB1dCgncGlubmVkQ29scycpIHBpbm5lZENvbHM6bnVtYmVyID0gMDtcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBlbGVtZW50UmVmOkVsZW1lbnRSZWYscHJpdmF0ZSByZW5kZXJlcjpSZW5kZXJlcjIpIHsgfVxuICBcbiAgbmdBZnRlclZpZXdJbml0KCl7XG4gICAgdGhpcy5hY3RpdmUoKTtcbiAgfVxuICBwdWJsaWMgYWN0aXZlKCl7XG4gICAgdGhpcy5yZW5kZXJlci5saXN0ZW4odGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQucXVlcnlTZWxlY3RvcigndGJvZHknKSwnc2Nyb2xsJyx0aGlzLm9uU2Nyb2xsLmJpbmQodGhpcykpXG4gIH1cbiAgb25TY3JvbGwoZXZlbnQpe1xuICAgIGxldCBoZWFkZXIgPSB0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudC5xdWVyeVNlbGVjdG9yKCd0aGVhZCcpO1xuICAgIGxldCBib2R5ID0gdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQucXVlcnlTZWxlY3RvcigndGJvZHknKTtcbiAgICBoZWFkZXIuc3R5bGUudHJhbnNmb3JtID0gYHRyYW5zbGF0ZVgoLSR7ZXZlbnQuc3JjRWxlbWVudC5zY3JvbGxMZWZ0fXB4KWA7XG4gICAgaWYodGhpcy5waW5uZWRDb2xzPjApe1xuICAgICAgaGVhZGVyLmNoaWxkTm9kZXMuZm9yRWFjaCh0ciA9PiB7XG4gICAgICAgIGxldCBuID0gdGhpcy5waW5uZWRDb2xzO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgaWYodHIuY2hpbGROb2Rlc1tpXT8uc3R5bGUgIT09IG51bGwgJiYgdHIuY2hpbGROb2Rlc1tpXT8uc3R5bGUhPT0gdW5kZWZpbmVkKXtcbiAgICAgICAgICAgICAgdHIuY2hpbGROb2Rlc1tpXS5zdHlsZS5wb3NpdGlvbiA9IGByZWxhdGl2ZWA7XG4gICAgICAgICAgICAgIHRyLmNoaWxkTm9kZXNbaV0uc3R5bGUudHJhbnNmb3JtID0gYHRyYW5zbGF0ZSgke2V2ZW50LnNyY0VsZW1lbnQuc2Nyb2xsTGVmdH1weClgO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIGJvZHkuY2hpbGROb2Rlcy5mb3JFYWNoKHRyID0+IHtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnBpbm5lZENvbHM7IGkrKykge1xuICAgICAgICAgIGlmKHRyLmNoaWxkTm9kZXNbaV0/LnN0eWxlICE9PSBudWxsICYmIHRyLmNoaWxkTm9kZXNbaV0/LnN0eWxlIT09IHVuZGVmaW5lZCl7XG4gICAgICAgICAgICB0ci5jaGlsZE5vZGVzW2ldLnN0eWxlLnBvc2l0aW9uID0gYHJlbGF0aXZlYDtcbiAgICAgICAgICAgIHRyLmNoaWxkTm9kZXNbaV0uc3R5bGUudHJhbnNmb3JtID0gYHRyYW5zbGF0ZSgke2V2ZW50LnNyY0VsZW1lbnQuc2Nyb2xsTGVmdH1weClgO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9XG59XG4iXX0=